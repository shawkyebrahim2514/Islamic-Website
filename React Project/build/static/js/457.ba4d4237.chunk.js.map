{"version":3,"file":"static/js/457.ba4d4237.chunk.js","mappings":"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","sources":["components/ErrorAlert.jsx","custom-hooks/fetchData.js","components/Adhkar/AdhkarHeader.jsx","apis/adhkar.js","components/Adhkar/AdhkarBody/AdhkarCard.jsx","components/Adhkar/AdhkarBody/AdhkarCards.jsx","components/Adhkar/AdhkarBody/AdhkarContentSectionCounter.jsx","components/Adhkar/AdhkarBody/AdhkarContentSection.jsx","components/Adhkar/AdhkarBody/AdhkarContent.jsx","components/Adhkar/AdhkarBody/index.jsx","pages/AdhkarPage.jsx"],"sourcesContent":["import { Box } from '@mui/material';\r\nimport Alert from '@mui/material/Alert';\r\nimport { useCallback, useState } from 'react';\r\n\r\nfunction ToggledAlert() {\r\n    const [showAlert, setShowAlert] = useState(true);\r\n\r\n    const handleClick = useCallback(() => {\r\n        setShowAlert(false);\r\n    }, []);\r\n\r\n    return showAlert && (\r\n        <Box sx={{\r\n            position: 'fixed',\r\n            bottom: '20px',\r\n            right: '20px',\r\n            zIndex: 1000,\r\n        }}>\r\n            <Alert severity={'warning'} onClose={handleClick}>\r\n                {'Somthing went wrong!, refresh the page and try again.'}\r\n            </Alert>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ToggledAlert;\r\n\r\n\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useFetch = ({ url }, dependencies) => {\r\n    const [data, setData] = useState(null);\r\n    const [status, setStatus] = useState(\"loading\"); // loading, error, success\r\n    const [error, setError] = useState(null);\r\n    \r\n    useEffect(() => {\r\n        if (!url) {\r\n            setStatus(\"error\");\r\n            return;\r\n        }\r\n        setStatus(\"loading\");\r\n        async function getData() {\r\n            try {\r\n                const response = await fetch(url);\r\n                if (!response.ok) {\r\n                    throw new Error(\"Something went wrong\");\r\n                }\r\n                const data = await response.json();\r\n                setData(data);\r\n                setStatus(\"success\");\r\n            } catch (error) {\r\n                setStatus(\"error\");\r\n                setError(error.message);\r\n            }\r\n        }\r\n        getData();\r\n    }, dependencies);\r\n\r\n    return { data, status, error };\r\n}\r\n\r\nconst isLoading = (status) => status === \"loading\";\r\nconst isSuccess = (status) => status === \"success\";\r\nconst isError = (status) => status === \"error\";\r\n\r\nexport { useFetch, isLoading, isSuccess, isError };","import { Box, Container } from '@mui/material'\r\n\r\nexport default function AdhkarHeader() {\r\n    return (\r\n        <Box component='header' sx={{ pt: 10, pb: 4 }}>\r\n            <Container maxWidth='lg' >\r\n                <Box\r\n                    component='img'\r\n                    src='images/doaa-man.png'\r\n                    alt='Mohammed'\r\n                    sx={{\r\n                        filter: 'drop-shadow(2px 2px 2px #170f052e)',\r\n                        height: '200px',\r\n                        width: 'auto',\r\n                        display: 'block',\r\n                        margin: 'auto'\r\n                    }} />\r\n            </Container>\r\n        </Box>\r\n    )\r\n}\r\n","const getAdhkar = () => {\r\n    const URL = 'https://raw.githubusercontent.com/nawafalqari/azkar-api/56df51279ab6eb86dc2f6202c7de26c8948331c1/azkar.json';\r\n    return URL;\r\n}\r\n\r\nexport { getAdhkar };","import { memo, useCallback } from 'react'\r\nimport Paper from '@mui/material/Paper';\r\nimport { Typography } from '@mui/material';\r\n\r\n\r\nfunction AdhkarCard({ cardData, isChosen, setChosenAdhkar }) {\r\n    const handleClick = useCallback(() => {\r\n        setChosenAdhkar(cardData);\r\n    }, []);\r\n\r\n    return (\r\n        <Paper onClick={handleClick} sx={{\r\n            cursor: 'pointer',\r\n            p: 2,\r\n            textAlign: 'center',\r\n            height: '80px',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            backgroundColor: isChosen ? 'primary.main' : 'primary.light',\r\n            color: isChosen ? 'white' : 'text.secondary',\r\n            '&:hover': {\r\n                backgroundColor: 'primary.main',\r\n                color: 'white',\r\n            },\r\n        }} >\r\n            <Typography variant=\"h6\" component=\"div\">\r\n                {cardData}\r\n            </Typography>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default memo(AdhkarCard)\r\n","import { memo } from 'react'\r\nimport AdhkarCard from './AdhkarCard'\r\nimport { Box, Container, Grid } from '@mui/material'\r\nimport { v4 as uuid } from 'uuid'\r\n\r\nfunction AdhkarCards({ data, chosenAdhkar, setChosenAdhkar }) {\r\n    return (\r\n        <Box component=\"main\" sx={{ flexGrow: 1, pb: 3 }}>\r\n            <Container maxWidth=\"lg\">\r\n                <Grid container spacing={2}>\r\n                    {data.map((item) => {\r\n                        return (\r\n                            <Grid item xs={12} sm={6} md={4} lg={3} key={uuid()} >\r\n                                <AdhkarCard\r\n                                    cardData={item}\r\n                                    isChosen={item === chosenAdhkar}\r\n                                    setChosenAdhkar={setChosenAdhkar} />\r\n                            </Grid>\r\n                        )\r\n                    })}\r\n                </Grid>\r\n            </Container>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default memo(AdhkarCards)","import { useCallback, useState } from \"react\";\r\nimport Box from '@mui/material/Box';\r\nimport Fab from '@mui/material/Fab';\r\nimport { Typography } from \"@mui/material\";\r\n\r\nexport default function AdhkarContentSectionCounter({ initialCounter }) {\r\n    const [counter, setCounter] = useState(initialCounter);\r\n    const handleCounterClick = useCallback(() => {\r\n        if (counter === 0) return;\r\n        setCounter((oldState) => oldState - 1);\r\n    }, [counter]);\r\n\r\n    return (\r\n        <Box sx={{ '& > :not(style)': { m: 1 } }} onClick={handleCounterClick}>\r\n            <Fab color=\"primary\" aria-label=\"edit\">\r\n                <Typography variant=\"h6\" component=\"h3\" sx={{\r\n                    textAlign: 'center',\r\n                    lineHeight: '1.6',\r\n                }}>\r\n                    {counter}\r\n                </Typography>\r\n            </Fab>\r\n        </Box>\r\n    )\r\n}\r\n","import { Typography } from '@mui/material'\r\nimport AdhkarContentSectionCounter from './AdhkarContentSectionCounter'\r\n\r\nexport default function AdhkarContentSection({ data }) {\r\n    return (\r\n        <>\r\n            <Typography variant=\"h5\" component=\"h3\" sx={{\r\n                textAlign: 'center',\r\n                lineHeight: '1.6',\r\n            }}>\r\n                {data.content.replace(/\\\\|n|'|,/g, \"\")}\r\n            </Typography>\r\n\r\n            {data.description && (\r\n                <Typography variant=\"body1\" component=\"p\" sx={{\r\n                    textAlign: 'center',\r\n                    lineHeight: '1.6',\r\n                }}>\r\n                    {data.description}\r\n                </Typography>\r\n            )}\r\n\r\n            <AdhkarContentSectionCounter initialCounter={+data.count} />\r\n        </>\r\n    )\r\n}\r\n","import { Box, Container, Typography } from '@mui/material';\r\nimport AdhkarContentSection from './AdhkarContentSection'\r\nimport { v4 as uuid } from 'uuid';\r\nimport { memo } from 'react';\r\n\r\nfunction AdhkarContent({ content }) {\r\n    return (\r\n        <Box sx={{\r\n            py: 2\r\n        }}>\r\n            {content ? content.map((item, index) => {\r\n                return (\r\n                    <Box component='section' key={uuid()} sx={{\r\n                        backgroundColor: index % 2 === 0 ? 'primary.light' : 'primary.contrastText',\r\n                        py: 4,\r\n                    }}>\r\n                        <Container maxWidth=\"lg\" sx={{\r\n                            display: 'flex',\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            flexDirection: 'column',\r\n                            gap: '1rem',\r\n                        }}>\r\n                            <AdhkarContentSection data={item} />\r\n                        </Container>\r\n                    </Box>\r\n                )\r\n            }) : (\r\n                <Typography variant=\"h6\" component=\"h3\" sx={{\r\n                    textAlign: 'center',\r\n                    lineHeight: '1.6',\r\n                }}>\r\n                    اختر ذكراً من القائمة\r\n                </Typography>\r\n            )}\r\n        </Box >\r\n    )\r\n}\r\n\r\nexport default memo(AdhkarContent);\r\n","import { useMemo, useState } from 'react'\r\nimport {useFetch, isError, isLoading, isSuccess } from '../../../custom-hooks'\r\nimport { getAdhkar } from '../../../apis'\r\nimport AdhkarCards from './AdhkarCards';\r\nimport AdhkarContent from './AdhkarContent';\r\nimport SpinnerLoading from '../../SpinnerLoading';\r\nimport ErrorAlert from '../../ErrorAlert';\r\n\r\nexport default function AdhkarBody() {\r\n    const { data, status } = useFetch({ url: getAdhkar() }, []);\r\n    const [chosenAdhkar, setChosenAdhkar] = useState('');\r\n    const cardsValue = useMemo(() => data ? Object.keys(data) : null, [data]);\r\n    const adhkarContent = useMemo(() => data ? data[chosenAdhkar]?.flat().filter((item) => item.content !== \"stop\") : null, [data, chosenAdhkar]);\r\n\r\n    return (\r\n        <main>\r\n            {isLoading(status) && <SpinnerLoading />}\r\n            {isError(status) && <ErrorAlert />}\r\n            {isSuccess(status) && (\r\n                <>\r\n                    <AdhkarCards\r\n                        chosenAdhkar={chosenAdhkar}\r\n                        setChosenAdhkar={setChosenAdhkar}\r\n                        data={cardsValue} />\r\n\r\n                    <AdhkarContent content={adhkarContent} />\r\n                </>\r\n            )}\r\n        </main>\r\n    )\r\n}\r\n","import AdhkarHeader from '../components/Adhkar/AdhkarHeader'\r\nimport AdhkarBody from '../components/Adhkar/AdhkarBody'\r\nimport { Helmet } from 'react-helmet'\r\nexport default function AdhkarPage() {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>Adhkar</title>\r\n            </Helmet>\r\n            <AdhkarHeader />\r\n            <AdhkarBody />\r\n        </>\r\n    )\r\n}\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","showAlert","setShowAlert","handleClick","useCallback","_jsx","Box","sx","position","bottom","right","zIndex","children","Alert","severity","onClose","useFetch","_ref","dependencies","url","data","setData","_useState3","_useState4","status","setStatus","_useState5","_useState6","error","setError","useEffect","_getData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","_data","wrap","_context","prev","next","fetch","sent","ok","Error","json","t0","message","stop","apply","arguments","getData","isLoading","isSuccess","isError","AdhkarHeader","component","pt","pb","Container","maxWidth","src","alt","filter","height","width","display","margin","getAdhkar","AdhkarCard","cardData","isChosen","setChosenAdhkar","Paper","onClick","cursor","p","textAlign","justifyContent","alignItems","backgroundColor","color","Typography","variant","memo","AdhkarCards","chosenAdhkar","flexGrow","Grid","container","spacing","map","item","xs","sm","md","lg","uuid","AdhkarContentSectionCounter","initialCounter","counter","setCounter","handleCounterClick","oldState","m","Fab","lineHeight","AdhkarContentSection","_jsxs","_Fragment","content","replace","description","count","AdhkarContent","py","index","flexDirection","gap","AdhkarBody","_useFetch","cardsValue","useMemo","Object","keys","adhkarContent","_data$chosenAdhkar","flat","SpinnerLoading","ErrorAlert","AdhkarPage","Helmet"],"sourceRoot":""}