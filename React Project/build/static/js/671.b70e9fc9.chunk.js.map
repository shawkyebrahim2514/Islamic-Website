{"version":3,"file":"static/js/671.b70e9fc9.chunk.js","mappings":"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","sources":["apis/hijri-calendar.js","components/ErrorAlert.jsx","components/Hijri-Calendar/HijriCalendarHeaderSection/FullDate.jsx","components/Hijri-Calendar/HijriCalendarHeaderSection/PrayerTimesTable/PrayerTimesRow.jsx","components/Hijri-Calendar/HijriCalendarHeaderSection/PrayerTimesTable/PrayerTimesHeaderRow.jsx","components/Hijri-Calendar/HijriCalendarHeaderSection/PrayerTimesTable/index.jsx","components/Hijri-Calendar/HijriCalendarHeaderSection/index.jsx","components/Hijri-Calendar/util/HijriCalendarHeaderSection.js","components/Hijri-Calendar/util/HijriCalendarByDate.js","custom-hooks/fetchData.js","data/localStorage.js","components/Hijri-Calendar/HijriCalendarByDateBody/index.jsx","pages/HijriCalendarByDatePage.jsx"],"sourcesContent":["import { getUserLocationLocalStorage, setUserLocationLocalStorage } from \"../data/localStorage\";\r\n\r\nasync function getDatesAndTimes(date) {\r\n    let fullDate = `${date.day}-${date.month}-${date.year}`;\r\n    await setUserLocationLocalStorage();\r\n    const location = getUserLocationLocalStorage();\r\n    const URL = `https://api.aladhan.com/v1/timings/${fullDate}?latitude=${location.latitude}&longitude=${location.longitude}&method=5`;\r\n    return URL;\r\n}\r\n\r\nfunction getHijriMonthDays({ month, year }) {\r\n    const URL = `https://api.aladhan.com/v1/gToHCalendar/${month}/${year}`;\r\n    return URL;\r\n}\r\n\r\nexport {\r\n    getDatesAndTimes,\r\n    getHijriMonthDays\r\n};","import { Box } from '@mui/material';\r\nimport Alert from '@mui/material/Alert';\r\nimport { useCallback, useState } from 'react';\r\n\r\nfunction ToggledAlert() {\r\n    const [showAlert, setShowAlert] = useState(true);\r\n\r\n    const handleClick = useCallback(() => {\r\n        setShowAlert(false);\r\n    }, []);\r\n\r\n    return showAlert && (\r\n        <Box sx={{\r\n            position: 'fixed',\r\n            bottom: '20px',\r\n            right: '20px',\r\n            zIndex: 1000,\r\n        }}>\r\n            <Alert severity={'warning'} onClose={handleClick}>\r\n                {'Somthing went wrong!, refresh the page and try again.'}\r\n            </Alert>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ToggledAlert;\r\n\r\n\r\n","import React from 'react'\r\nimport { Box, Typography } from '@mui/material';\r\n\r\nexport default function FullDate({ hijriDate, gregorianDate }) {\r\n    return (\r\n        <Box sx={{textAlign: 'center', mb: 2}}>\r\n            <Typography\r\n                variant=\"h3\"\r\n                sx={{\r\n                    color: 'primary.main',\r\n                    mb: 2,\r\n                }}>\r\n                {hijriDate.day} {hijriDate.month} {hijriDate.year}\r\n            </Typography>\r\n\r\n            <Typography\r\n                variant=\"h4\">\r\n                {hijriDate.dateInNumbers} / {gregorianDate.dateInNumbers}\r\n            </Typography>\r\n        </Box>\r\n    )\r\n}\r\n","import { Box, Typography } from '@mui/material'\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\n\r\nexport default function PrayerTimesRow({ prayerName, prayerTime }) {\r\n    return (\r\n        <Box sx={{\r\n            width: '100%',\r\n            color: 'quranPlayer.main',\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            border: 'inherit',\r\n            borderRadius: 'inherit',\r\n            py: 1,\r\n            '&:hover': {\r\n                backgroundColor: 'primary.main',\r\n                color: 'primary.contrastText',\r\n                cursor: 'pointer',\r\n            }\r\n        }}>\r\n            <Typography variant=\"h6\" sx={{ px: 2 }}>\r\n                {prayerTime}\r\n            </Typography>\r\n\r\n            <Box sx={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                px: 2,\r\n                gap: 1,\r\n            }}>\r\n                <Typography variant=\"h6\">\r\n                    {prayerName}\r\n                </Typography>\r\n                <AccessTimeIcon />\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n","import { Box, Chip, Typography } from '@mui/material'\r\n\r\nexport default function PrayerTimesHeaderRow({ timezone }) {\r\n    return (\r\n        <Box component='header' sx={{\r\n            width: '100%',\r\n            color: 'primary.main',\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            p: 1,\r\n            px: 2,\r\n        }}>\r\n            <Typography variant=\"h6\">\r\n                {'الصلاة'}\r\n            </Typography>\r\n\r\n            <Chip sx={{ fontSize: '1rem' }} label={timezone} color=\"primary\" />\r\n\r\n            <Typography variant=\"h6\">\r\n                {'الوقت'}\r\n            </Typography>\r\n        </Box>\r\n    )\r\n}\r\n","import { Box, Container } from '@mui/material'\r\nimport React from 'react'\r\nimport PrayerTimesRow from './PrayerTimesRow';\r\nimport { v4 as uuid } from 'uuid';\r\nimport PrayerTimesHeaderRow from './PrayerTimesHeaderRow';\r\n\r\nexport default function PrayerTimesTable({ timezone, prayerTimes }) {\r\n    return (\r\n        <Box>\r\n            <Container maxWidth=\"sm\" sx={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                flexDirection: 'column',\r\n                border: '2px solid',\r\n                borderColor: 'quranPlayer.main',\r\n                borderRadius: '20px',\r\n                gap: 1,\r\n                pb: 3,\r\n                pt: 1,\r\n                backgroundColor: 'primary.contrastText',\r\n            }}>\r\n                <PrayerTimesHeaderRow timezone={timezone} />\r\n\r\n                {Object.entries(prayerTimes).map(([key, value]) => {\r\n                    return (\r\n                        <PrayerTimesRow\r\n                            key={uuid()}\r\n                            prayerName={key}\r\n                            prayerTime={value} />\r\n                    )\r\n                }\r\n                )}\r\n            </Container>\r\n        </Box>\r\n    )\r\n}\r\n","import { Box, Container } from '@mui/material';\r\nimport FullDate from './FullDate';\r\nimport PrayerTimesTable from './PrayerTimesTable';\r\nimport { useFetch, isError, isLoading, isSuccess } from '../../../custom-hooks';\r\nimport { useEffect, useMemo, useState } from 'react';\r\nimport { getDatesAndTimes } from '../../../apis';\r\nimport SpinnerLoading from '../../SpinnerLoading';\r\nimport ErrorAlert from '../../ErrorAlert';\r\nimport {\r\n    parsePrayerTimes,\r\n    parseGregorianDate,\r\n    parseHijriDate,\r\n    currentDate\r\n} from '../util';\r\n\r\nexport default function HijriCalendarHeaderSection({ pageDate = currentDate }) {\r\n    const [datesAndTimesURL, setDatesAndTimesURL] = useState(null);\r\n    const { data, status } = useFetch({ url: datesAndTimesURL }, [datesAndTimesURL]);\r\n\r\n    const hijriDate = useMemo(() => {\r\n        if (!data) return null;\r\n        return parseHijriDate(data.data.date.hijri);\r\n    }, [data]);\r\n\r\n    const gregorianDate = useMemo(() => {\r\n        if (!data) return null;\r\n        return parseGregorianDate(data.data.date.gregorian);\r\n    }, [data]);\r\n\r\n    const prayerTimes = useMemo(() => {\r\n        if (!data) return null;\r\n        return parsePrayerTimes(data.data.timings)\r\n    }, [data]);\r\n\r\n    useEffect(() => {\r\n        getDatesAndTimes(pageDate).then((res) => {\r\n            setDatesAndTimesURL(res);\r\n        });\r\n    }, [pageDate]);\r\n\r\n    return (\r\n        <Box component=\"header\">\r\n            <Container maxWidth=\"lg\" sx={{\r\n                py: 4,\r\n            }}>\r\n                {isLoading(status) && <SpinnerLoading />}\r\n                {isError(status) && datesAndTimesURL && <ErrorAlert />}\r\n                {isSuccess(status) && (\r\n                    <>\r\n                        <FullDate\r\n                            hijriDate={hijriDate}\r\n                            gregorianDate={gregorianDate} />\r\n                        <PrayerTimesTable\r\n                            timezone={data.data.meta.timezone}\r\n                            prayerTimes={prayerTimes} />\r\n                    </>\r\n                )}\r\n            </Container>\r\n        </Box>\r\n    )\r\n}\r\n","const arabicPrayerTimes = {\r\n    fajr: \"الفجر\",\r\n    dhuhr: \"الظهر\",\r\n    asr: \"العصر\",\r\n    maghrib: \"المغرب\",\r\n    isha: \"العشاء\",\r\n}\r\n\r\nconst parsePrayerTimes = (timings) => {\r\n    return {\r\n        [arabicPrayerTimes.fajr]: timings.Fajr,\r\n        [arabicPrayerTimes.dhuhr]: timings.Dhuhr,\r\n        [arabicPrayerTimes.asr]: timings.Asr,\r\n        [arabicPrayerTimes.maghrib]: timings.Maghrib,\r\n        [arabicPrayerTimes.isha]: timings.Isha\r\n    }\r\n}\r\n\r\nconst parseHijriDate = (date) => {\r\n    return {\r\n        dateInNumbers: date.date,\r\n        day: date.weekday.ar,\r\n        month: date.month.ar,\r\n        year: date.year,\r\n    }\r\n}\r\n\r\nconst parseGregorianDate = (date) => {\r\n    return {\r\n        dateInNumbers: date.date,\r\n    }\r\n}\r\n\r\nconst currentDate = {\r\n    day: new Date().getDate(),\r\n    month: new Date().getMonth() + 1,\r\n    year: new Date().getFullYear(),\r\n}\r\n\r\nexport { parsePrayerTimes, parseHijriDate, parseGregorianDate, currentDate };","import { currentDate } from \"./HijriCalendarHeaderSection\";\r\n\r\nfunction parseDateParam(date) {\r\n    if (!date.match(/^\\d{2}-\\d{2}-\\d{4}$/)) {\r\n        return currentDate;\r\n    } else {\r\n        const day = date.split('-')[0];\r\n        const month = date.split('-')[1];\r\n        const year = date.split('-')[2];\r\n        if (day < 1 || day > 30 || month < 1 || month > 12 || year < 1) {\r\n            return currentDate;\r\n        }\r\n        return ({\r\n            day: parseInt(day),\r\n            month: parseInt(month),\r\n            year: parseInt(year)\r\n        });\r\n    }\r\n}\r\n\r\nexport { parseDateParam }","import { useEffect, useState } from \"react\";\r\n\r\nconst useFetch = ({ url }, dependencies) => {\r\n    const [data, setData] = useState(null);\r\n    const [status, setStatus] = useState(\"loading\"); // loading, error, success\r\n    const [error, setError] = useState(null);\r\n    \r\n    useEffect(() => {\r\n        if (!url) {\r\n            setStatus(\"error\");\r\n            return;\r\n        }\r\n        setStatus(\"loading\");\r\n        async function getData() {\r\n            try {\r\n                const response = await fetch(url);\r\n                if (!response.ok) {\r\n                    throw new Error(\"Something went wrong\");\r\n                }\r\n                const data = await response.json();\r\n                setData(data);\r\n                setStatus(\"success\");\r\n            } catch (error) {\r\n                setStatus(\"error\");\r\n                setError(error.message);\r\n            }\r\n        }\r\n        getData();\r\n    }, dependencies);\r\n\r\n    return { data, status, error };\r\n}\r\n\r\nconst isLoading = (status) => status === \"loading\";\r\nconst isSuccess = (status) => status === \"success\";\r\nconst isError = (status) => status === \"error\";\r\n\r\nexport { useFetch, isLoading, isSuccess, isError };","/**\r\n * quranPlayer: {\r\n *      activeAyah: value,\r\n        endAyahPage: value,\r\n        currentPage: value,\r\n        isAudioPlaying: value,\r\n        recitation: value,\r\n * }\r\n */\r\n\r\nconst getQuranPlayerLocalStorage = () => {\r\n    const defaultValues = {\r\n        activeAyah: null,\r\n        endAyahPage: null,\r\n        currentPage: 1,\r\n        currentSurahNumber: 1,\r\n        isAudioPlaying: false,\r\n        recitation: 'AbdulBaset_Mujawwad',\r\n    }\r\n\r\n    const quranPlayer = JSON.parse(localStorage.getItem('quranPlayer'));\r\n\r\n    if (quranPlayer) {\r\n        return quranPlayer;\r\n    } else {\r\n        localStorage.setItem('quranPlayer', JSON.stringify(defaultValues));\r\n        return defaultValues;\r\n    }\r\n}\r\n\r\nconst changeQuranPlayerLocalStorage = (key, value) => {\r\n    const quranPlayerLocalStorage = JSON.parse(localStorage.getItem('quranPlayer'));\r\n    const newQuranPlayerLocalStorage = {\r\n        ...quranPlayerLocalStorage,\r\n        [key]: value\r\n    }\r\n    localStorage.setItem('quranPlayer', JSON.stringify(newQuranPlayerLocalStorage));\r\n}\r\n\r\nconst setUserLocationLocalStorage = async () => {\r\n    if (!localStorage.getItem('location')) {\r\n        const URL = \"https://ipinfo.io/41.44.83.12?token=87c42456f0ae82\";\r\n        let result = await (await (fetch(URL))).json();\r\n        let [latitude, longitude] = result.loc.split(\",\");\r\n        let userLocation = {\r\n            latitude,\r\n            longitude\r\n        };\r\n        localStorage.setItem('location', JSON.stringify(userLocation));\r\n    }\r\n}\r\n\r\nconst getUserLocationLocalStorage = () => {\r\n    return JSON.parse(localStorage.getItem('location'));\r\n}\r\n\r\nexport {\r\n    getQuranPlayerLocalStorage,\r\n    changeQuranPlayerLocalStorage,\r\n    setUserLocationLocalStorage,\r\n    getUserLocationLocalStorage\r\n}","import { Box, Container, Paper, Typography } from \"@mui/material\";\r\nimport { DateCalendar } from '@mui/x-date-pickers/DateCalendar';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { memo } from \"react\";\r\n\r\nfunction HijriCalendarByDateBody({ setDateObject }) {\r\n    return (\r\n        <Box sx={{\r\n            backgroundColor: 'primary.light',\r\n        }}>\r\n            <Container maxWidth=\"lg\" sx={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n                flexDirection: 'column',\r\n                gap: '1rem',\r\n                py: 2,\r\n            }}>\r\n                <Typography variant=\"h5\" sx={{\r\n                    fontWeight: 'bold',\r\n                    color: 'primary.main',\r\n                }}>\r\n                    {'اختر يوماً لعرض مواعيد الصلاة'}\r\n                </Typography>\r\n\r\n                <Paper sx={{\r\n                    py: 3,\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'space-between',\r\n                    width: '100%',\r\n                    maxWidth: '400px',\r\n                    m: 'auto',\r\n                }}>\r\n                    <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                        <DateCalendar\r\n                            onChange={(date) => {\r\n                                const dateObject = {\r\n                                    day: date.date(),\r\n                                    month: date.month() + 1,\r\n                                    year: date.year()\r\n                                }\r\n                                setDateObject(dateObject);\r\n                                window.scrollTo({ top: 0, behavior: 'smooth' });\r\n                            }}\r\n                            sx={{ direction: 'ltr' }} />\r\n                    </LocalizationProvider>\r\n                </Paper>\r\n            </Container>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default memo(HijriCalendarByDateBody)\r\n","import HijriCalendarHeaderSection from '../components/Hijri-Calendar/HijriCalendarHeaderSection'\r\nimport { Box } from '@mui/material';\r\nimport { useParams } from 'react-router-dom';\r\nimport HijriCalendarByDateBody from '../components/Hijri-Calendar/HijriCalendarByDateBody';\r\nimport { useEffect, useState } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { parseDateParam } from '../components/Hijri-Calendar/util';\r\n\r\nexport default function HijriCalendarByDatePage() {\r\n    const { date } = useParams();\r\n    const [dateObject, setDateObject] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setDateObject(parseDateParam(date));\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>Hijri Calendar by Day</title>\r\n            </Helmet>\r\n            {dateObject && (\r\n                <>\r\n                    <Box sx={{\r\n                        pt: 6,\r\n                    }}>\r\n                        <HijriCalendarHeaderSection pageDate={dateObject} />\r\n                        <HijriCalendarByDateBody setDateObject={setDateObject} />\r\n                    </Box>\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n"],"names":["getDatesAndTimes","_x","_getDatesAndTimes","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","date","fullDate","location","URL","wrap","_context","prev","next","concat","day","month","year","setUserLocationLocalStorage","getUserLocationLocalStorage","latitude","longitude","abrupt","stop","getHijriMonthDays","_ref","_useState","useState","_useState2","_slicedToArray","showAlert","setShowAlert","handleClick","useCallback","_jsx","Box","sx","position","bottom","right","zIndex","children","Alert","severity","onClose","FullDate","hijriDate","gregorianDate","_jsxs","textAlign","mb","Typography","variant","color","dateInNumbers","PrayerTimesRow","prayerName","prayerTime","width","display","justifyContent","border","borderRadius","py","backgroundColor","cursor","px","alignItems","gap","AccessTimeIcon","PrayerTimesHeaderRow","timezone","component","p","Chip","fontSize","label","PrayerTimesTable","prayerTimes","Container","maxWidth","flexDirection","borderColor","pb","pt","Object","entries","map","_ref2","_ref3","key","value","uuid","HijriCalendarHeaderSection","_ref$pageDate","pageDate","currentDate","datesAndTimesURL","setDatesAndTimesURL","_useFetch","useFetch","url","data","status","useMemo","parseHijriDate","hijri","parseGregorianDate","gregorian","parsePrayerTimes","timings","useEffect","then","res","isLoading","SpinnerLoading","isError","ErrorAlert","isSuccess","_Fragment","meta","arabicPrayerTimes","_defineProperty","Fajr","Dhuhr","Asr","Maghrib","Isha","weekday","ar","Date","getDate","getMonth","getFullYear","parseDateParam","match","split","parseInt","dependencies","setData","_useState3","_useState4","setStatus","_useState5","_useState6","error","setError","_getData","response","_data","fetch","sent","ok","Error","json","t0","message","getData","getQuranPlayerLocalStorage","defaultValues","activeAyah","endAyahPage","currentPage","currentSurahNumber","isAudioPlaying","recitation","quranPlayer","JSON","parse","localStorage","getItem","setItem","stringify","changeQuranPlayerLocalStorage","quranPlayerLocalStorage","newQuranPlayerLocalStorage","_objectSpread","result","_result$loc$split","_result$loc$split2","userLocation","loc","HijriCalendarByDateBody","setDateObject","fontWeight","Paper","m","LocalizationProvider","dateAdapter","AdapterDayjs","DateCalendar","onChange","dateObject","window","scrollTo","top","behavior","direction","memo","HijriCalendarByDatePage","useParams","Helmet"],"sourceRoot":""}